---
name: CI Pipeline

on: [push, pull_request]

env:
  GO_VERSION: 1.24
  KIND_VERSION: v0.27.0
  IMAGE_NAME: namespace-cleaner:test

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Lint Dockerfile
        uses: hadolint/hadolint-action@v3.1.0
        with:
          dockerfile: Dockerfile

      - name: Setup Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Run yamllint
        run: |
          pip install yamllint
          yamllint .

  unit-tests:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.head_ref || github.ref_name }}

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Install gobadge
        run: go install github.com/AlexBeauchemin/gobadge@latest

      - name: Run Unit Tests
        run: make test-unit

      - name: Upload Coverage
        uses: codecov/codecov-action@v4
        with:
          file: coverage-report/coverage.out

      - name: Commit updated README
        if: github.ref == 'refs/heads/main'
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git checkout main
          git add README.md
          git commit -m "Update coverage badge" || echo "No changes to commit"
          git push origin main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-test-and-scan:
    runs-on: ubuntu-latest
    needs: [unit-tests]
    steps:
      - uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker Image Locally
        run: |
          docker build -t ${{ env.IMAGE_NAME }} .

      - name: Run Trivy Security Scan (Local)
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ env.IMAGE_NAME }}
          severity: "CRITICAL"
          ignore-unfixed: true
          exit-code: 1
          format: table

      - name: Install kubectl
        uses: azure/setup-kubectl@v3

      - name: Install Kind
        run: |
          curl -Lo ./kind https://kind.sigs.k8s.io/dl/${{  env.KIND_VERSION }}/kind-linux-amd64
          chmod +x ./kind
          sudo mv ./kind /usr/local/bin/kind

      - name: Create Kind Cluster
        run: kind create cluster

      - name: Load Docker Image into Kind
        run: kind load docker-image ${{ env.IMAGE_NAME }}

      - name: Run Integration Tests
        run: make test-integration
