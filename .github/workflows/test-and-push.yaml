---
name: CI Pipeline

on: [push, pull_request]

env:
  REGISTRY: k8scc01covidacr.azurecr.io
  GO_VERSION: 1.24

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Lint Dockerfile
        uses: hadolint/hadolint-action@v3.1.0
        with:
          dockerfile: Dockerfile

      - name: Lint YAML
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Run yamllint
        run: |
          pip install yamllint
          yamllint .

  unit-tests:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Required for branch detection
          ref: ${{ github.head_ref || github.ref_name }} # Handle PR branches

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Install gobadge
        run: go install github.com/AlexBeauchemin/gobadge@latest

      - name: Run Unit Tests
        run: make test-unit

      - name: Upload Coverage
        uses: codecov/codecov-action@v4
        with:
          file: coverage.out

      - name: Commit updated README
        if: github.ref == 'refs/heads/main' # Only run on main branch
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git checkout -B main
          git add README.md
          git commit -m "Update coverage badge" || echo "No changes to commit"
          git push origin main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  integration-tests:
    runs-on: ubuntu-latest
    needs: [lint, unit-tests]
    steps:
      - uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Cache Go modules
        uses: actions/cache@v3
        with:
          path: |
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ env.GO_VERSION }}-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-${{ env.GO_VERSION }}-
            ${{ runner.os }}-go-

      - name: Install kubectl
        uses: azure/setup-kubectl@v3

      - name: Install Kind
        run: |
          curl -Lo ./kind https://kind.sigs.k8s.io/dl/v0.20.0/kind-linux-amd64
          chmod +x ./kind
          sudo mv ./kind /usr/local/bin/kind

      - name: Build Docker Image
        run: |
          make docker-build

      - name: Run Integration Tests
        run: |
          make test-integration

      - name: Cleanup Kind Cluster
        if: always()
        run: |
          make _delete-kind-cluster

  build-push:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to ACR
        uses: azure/docker-login@v1
        with:
          login-server: ${{ env.REGISTRY }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: Build and Push Image
        uses: docker/build-push-action@v5
        with:
          tags: ${{ env.REGISTRY }}/namespace-cleaner:${{ github.sha }}
          push: true

      - name: Security Scan
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ env.REGISTRY }}/namespace-cleaner:${{ github.sha }}
          severity: "CRITICAL"
          ignore-unfixed: true
          exit-code: 1
          format: table
