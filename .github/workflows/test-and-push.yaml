name: CI Pipeline

on:
  - push
  - pull_request

env:
  REGISTRY: k8scc01covidacr.azurecr.io
  KIND_VERSION: v0.20.0

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.21"

      - name: Run Go Lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: latest
          args: --timeout=5m --out-format=colored-line-number
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Lint Dockerfile
        uses: hadolint/hadolint-action@v3.1.0
        with:
          dockerfile: Dockerfile

      - name: Lint YAML Files
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
        run: |
          pip install yamllint
          yamllint .

  unit-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v4
        with:
          go-version: "1.21"

      - name: Run Unit Tests
        run: |
          echo "::group::ðŸ“¦ Unit Test Output"
          make test-unit
          echo "::endgroup::"

      - name: Upload Coverage
        uses: codecov/codecov-action@v3
        with:
          file: coverage.out

  integration-tests:
    runs-on: ubuntu-latest
    needs: unit-tests
    steps:
      - uses: actions/checkout@v4
      - name: Setup Kind
        uses: helm/kind-action@v1.8.0
        with:
          version: ${{ env.KIND_VERSION }}

      - name: Run Integration Tests
        run: make test-integration

  build-scan-push:
    runs-on: ubuntu-latest
    needs: [lint, unit-tests]
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver: docker-container
          install: true

      - name: Login to ACR
        uses: azure/docker-login@v1
        with:
          login-server: ${{ env.REGISTRY }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: Build and Scan
        uses: docker/build-push-action@v5
        with:
          tags: ${{ env.REGISTRY }}/namespace-cleaner:${{ github.sha }}
          push: false
          sbom: true

      - name: Security Scan
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ env.REGISTRY }}/namespace-cleaner:${{ github.sha }}
          severity: "CRITICAL"
          ignore-unfixed: true
          exit-code: 1
          format: table
          db-repositories: |
            ghcr.io/aquasecurity/trivy-db:2
            public.ecr.aws/aquasecurity/trivy-db
          java-db-repositories: |
            ghcr.io/aquasecurity/trivy-java-db:1
            public.ecr.aws/aquasecurity/trivy-java-db

      - name: Push to ACR
        uses: docker/build-push-action@v5
        with:
          tags: ${{ env.REGISTRY }}/namespace-cleaner:${{ github.sha }}
          push: true
